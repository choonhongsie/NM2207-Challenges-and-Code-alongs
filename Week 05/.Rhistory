return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function() {
user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function() {
user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function() {
user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
"Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function() {
user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function() {
user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text)
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# call the function 'inner_function'
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text + ' hello')
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text)
}
return(inner_function)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text)
}
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(x) {
print(x)
}
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(x) {
print(x)
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(x) {
print("t")
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(x) {
print("t"+x)
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text)
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
?printf
# Enter code here
??printf
# Enter code here
?printf
# Enter code here
?print
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print(text)
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print("text")
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print("text")
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print("text")
}
inner_function(x)
}
# Call the function `outer_function`
#outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) {
print("This is inner function!")
}
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) print("This is inner function!")
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
total <- 100
accumulator <- function(x) {
# Add the argument to the global variable `total`
total <<- total + x
}
total
# Call the function with the argument 10
total <- accumulator(10)
total
# Call the function with the argument 20
total <- accumulator(20)
total
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) print("This is inner function!")
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function(text) print(x)
inner_function(x)
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
}
# Call the function `outer_function`
outer_function()
# Call the function 'text_analysis'
play_game("This should be good")
# Call the function 'text_analysis'
play_game("This should be good")
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function(user_input) {
#user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game("This should be good")
# Enter code here
library(tidyverse)
# Function to analyze text
play_game <- function(user_input) {
#user_input <- readline(prompt="Enter your sentence:")
# Get the number of words
num_words <- strsplit(user_input, " ")[[1]] %>% length()
# Get the number of characters
num_characters <- nchar(user_input)
# Get the average word length
average_word_length <- num_characters / num_words
# Calculate the communication skill level
communication_skill_level <- case_when(
num_words >= 4 & average_word_length >= 1 ~ "Expert",
num_words >= 3 & average_word_length >= 1 ~ "Good",
num_words >= 2 & average_word_length >= 1 ~ "Average",
TRUE ~ "Needs Improvement"
)
# Return the results
return(list(
num_words = num_words,
num_characters = num_characters,
average_word_length = average_word_length,
communication_skill_level = communication_skill_level
))
}
# Call the function 'text_analysis'
play_game("This should be Expert.")
# Enter code here
outer_function <- function() {
x=5
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function() {
print(x)
}
inner_function()
}
# Call the function `outer_function`
outer_function()
# Enter code here
outer_function <- function() {
x=5
inner_function <- function() print(x)
inner_function()
}
# Call the function `outer_function`
outer_function()
knitr::opts_chunk$set(echo = TRUE)
view(hotels)
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read_csv("hotels.csv")
# Load package tidyverse
library("tidyverse")
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read_csv("hotels.csv")
view(hotels)
View(hotels)
View(hotels)
# Non-conditional selection of rows: non-consecutive/specific indices (Slide #50) ----
hotels %>%
slice(1,3,5) # Slice 1 refers to the first record of the data
# count() to get frequencies (Slide #60) ----
hotels %>%
count(market_segment)
# count() to get frequencies with sorting of count (Slide #61) ----
hotels %>%
count(market_segment, sort = TRUE)
# count() multiple variables (Slide #62) ----
hotels %>%
count(hotel, market_segment)
say_hello_to <- function(name) {
print(paste0("Hello ", name,"!"))
}
# 1. Write a function to print a "Hello" message (Slide #14) ----
say_hello_to <- function(name) {
print(paste0("Hello ", name,"!"))
}
# 2. Function call with different input names (Slide #15) ----
say_hello_to('Kashif')
say_hello_to('Zach')
say_hello_to('Deniz')
# 3. typeof primitive functions (Slide #16) ----
typeof(`+`)
typeof(sum)
# 4. typeof user-defined functions (Slide #17) ----
typeof(say_hello_to)
typeof(mean)
### 5. Function to calculate mean of a sample (Slide #19) ----
calc_sample_mean <- function(sample_size) {
mean(rnorm(sample_size))
}
# 6. Test your function (Slide #22) ----
# With one input ----
calc_sample_mean(1000)
# With vector input ----
calc_sample_mean(c(100,300,3000))
# Enter code here
# Initialize z
z <- 1
sprintf("The value assigned to z outside the function is %d",z)
# declare a function, notice how we pass a value of 2 for z
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo()
# Enter code here
# Initialize z
z <- 1
sprintf("The value assigned to z outside the function is %d",z)
# declare a function, notice how we pass a value of 2 for z
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo()
z <- 1
sprintf("The value assigned to z outside the function is %d",z)
# declare a function, notice how we pass a value of 2 for z
foo <- function(z = 2) {
# reassigning z
z <- 3
return(z+3)
}
foo()
z <- 1
# declare a function, notice how we pass a value of 2 for z
foo <- function(z =2) {
# reassigning z
z <- 3
return(z+3)
}
# another reassignment of z
foo(z = 4)
